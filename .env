# Database URL for the application to connect to the Docker container
DATABASE_URL=postgresql+asyncpg://admin:changethis@db:5432/shareyourspacedb
SECRET_KEY=your_very_secret_key_here_please_change
ALGORITHM=HS256
ALLOWED_ORIGINS=["http://localhost:3000"]
# Add other secrets later (Resend API Key, Stripe Keys, OAuth Keys, Google AI Key)
RESEND_API_KEY=re_RZ6f3YBY_DU8JHpWc2DVCX4BzzAUYPdqJ
STRIPE_SECRET_KEY=
STRIPE_PUBLISHABLE_KEY=
STRIPE_WEBHOOK_SECRET=
GOOGLE_CLIENT_ID=
GOOGLE_CLIENT_SECRET=
LINKEDIN_CLIENT_ID=
LINKEDIN_CLIENT_SECRET=
APPLE_CLIENT_ID=
APPLE_TEAM_ID=
APPLE_KEY_ID=
APPLE_PRIVATE_KEY=
GOOGLE_AI_API_KEY=AIzaSyA11p5vE3OfSu8OkiMetDPBeoKn4oNZcs8
# PostgreSQL Environment Variables for Docker Compose DB container initialization
POSTGRES_USER=user
POSTGRES_PASSWORD=password
POSTGRES_DB=db
# Frontend URL (used for constructing verification links, etc.)
FRONTEND_URL=http://localhost:3000

# Google Cloud Storage Bucket Name
GCS_BUCKET_NAME=sys-storage-1

# Google Cloud Project ID (Needed for GCS client library)
GOOGLE_CLOUD_PROJECT=shareyourspace-461805

# Ensure ADC user credentials mount path is USED when using impersonation
# Point to the Service Account Key file within the container (COMMENTED OUT - using impersonation)
# GOOGLE_APPLICATION_CREDENTIALS=/app/gcs-service-account-key.json

# Email address of the Service Account the backend should impersonate
TARGET_SERVICE_ACCOUNT_EMAIL=sys-backend-1@shareyourspace-461805.iam.gserviceaccount.com

# Ensure ADC user credentials mount path is NOT used when using a key file