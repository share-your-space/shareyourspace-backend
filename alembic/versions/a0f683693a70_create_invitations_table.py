"""create_invitations_table

Revision ID: a0f683693a70
Revises: 2a94457f8436
Create Date: 2024-05-24 10:00:00.000000 # Updated placeholder

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from app.models.invitation import InvitationStatus # Import for Enum values if needed by SAEnum

# revision identifiers, used by Alembic.
revision: str = 'a0f683693a70'
down_revision: Union[str, None] = '2a94457f8436' # Corrected previous revision
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('invitations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('startup_id', sa.Integer(), nullable=False),
    sa.Column('invitation_token', sa.String(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'ACCEPTED', 'EXPIRED', name='invitationstatus'), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True, server_default=sa.text('now()')),
    sa.Column('updated_at', sa.DateTime(), nullable=True, server_default=sa.text('now()')),
    sa.ForeignKeyConstraint(['startup_id'], ['startups.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_invitations_email'), 'invitations', ['email'], unique=False)
    op.create_index(op.f('ix_invitations_id'), 'invitations', ['id'], unique=False)
    op.create_index(op.f('ix_invitations_invitation_token'), 'invitations', ['invitation_token'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_invitations_invitation_token'), table_name='invitations')
    op.drop_index(op.f('ix_invitations_id'), table_name='invitations')
    op.drop_index(op.f('ix_invitations_email'), table_name='invitations')
    op.drop_table('invitations')
    # Explicitly drop the ENUM type if it was created as a standalone type in PostgreSQL
    # This is often needed if the ENUM is not automatically dropped with the table.
    sa.Enum(name='invitationstatus').drop(op.get_bind(), checkfirst=False)
    # ### end Alembic commands ###
