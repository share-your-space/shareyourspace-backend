"""resolve_space_user_relationship_ambiguity

Revision ID: ab3fc93a1e3c
Revises: 0e5deaa84948
Create Date: 2025-06-30 06:58:29.812177

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'ab3fc93a1e3c'
down_revision: Union[str, None] = '0e5deaa84948'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('invitations', sa.Column('invited_by_user_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'invitations', 'users', ['invited_by_user_id'], ['id'])
    op.drop_column('invitations', 'accepted_at')
    op.drop_column('invitations', 'revoked_at')
    op.add_column('spacenodes', sa.Column('description', sa.Text(), nullable=True))
    op.drop_column('spacenodes', 'created_at')
    op.drop_column('spacenodes', 'total_workstations')
    op.drop_column('spacenodes', 'address')
    op.drop_column('spacenodes', 'updated_at')
    op.drop_column('workstation_assignments', 'created_at')
    op.drop_column('workstation_assignments', 'updated_at')
    op.drop_index(op.f('ix_workstations_name'), table_name='workstations')
    op.drop_index(op.f('ix_workstations_status'), table_name='workstations')
    op.drop_column('workstations', 'created_at')
    op.drop_column('workstations', 'updated_at')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('workstations', sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('workstations', sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.create_index(op.f('ix_workstations_status'), 'workstations', ['status'], unique=False)
    op.create_index(op.f('ix_workstations_name'), 'workstations', ['name'], unique=False)
    op.add_column('workstation_assignments', sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('workstation_assignments', sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('spacenodes', sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('spacenodes', sa.Column('address', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('spacenodes', sa.Column('total_workstations', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('spacenodes', sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.drop_column('spacenodes', 'description')
    op.add_column('invitations', sa.Column('revoked_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('invitations', sa.Column('accepted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'invitations', type_='foreignkey')
    op.drop_column('invitations', 'invited_by_user_id')
    # ### end Alembic commands ###
