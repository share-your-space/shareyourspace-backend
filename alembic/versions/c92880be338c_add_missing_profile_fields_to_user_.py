"""Add missing profile fields to user_profiles table

Revision ID: c92880be338c
Revises: a2d9934e5db7
Create Date: 2025-04-27 10:31:50.326465

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'c92880be338c'
down_revision: Union[str, None] = 'a2d9934e5db7'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_user_profile_id', table_name='user_profile')
    op.drop_index('ix_user_profile_user_id', table_name='user_profile')
    op.drop_table('user_profile')
    op.add_column('user_profiles', sa.Column('contact_info_visibility', sa.Enum('PRIVATE', 'CONNECTIONS', 'PUBLIC', name='contact_visibility_enum'), nullable=False))
    op.add_column('user_profiles', sa.Column('skills_expertise', postgresql.ARRAY(sa.String()), nullable=True))
    op.add_column('user_profiles', sa.Column('industry_focus', postgresql.ARRAY(sa.String()), nullable=True))
    op.add_column('user_profiles', sa.Column('project_interests_goals', sa.Text(), nullable=True))
    op.add_column('user_profiles', sa.Column('collaboration_preferences', postgresql.ARRAY(sa.String()), nullable=True))
    op.add_column('user_profiles', sa.Column('tools_technologies', postgresql.ARRAY(sa.String()), nullable=True))
    op.add_column('user_profiles', sa.Column('linkedin_profile_url', sa.String(), nullable=True))
    op.add_column('user_profiles', sa.Column('profile_picture_url', sa.String(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('user_profiles', 'profile_picture_url')
    op.drop_column('user_profiles', 'linkedin_profile_url')
    op.drop_column('user_profiles', 'tools_technologies')
    op.drop_column('user_profiles', 'collaboration_preferences')
    op.drop_column('user_profiles', 'project_interests_goals')
    op.drop_column('user_profiles', 'industry_focus')
    op.drop_column('user_profiles', 'skills_expertise')
    op.drop_column('user_profiles', 'contact_info_visibility')
    op.create_table('user_profile',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('bio', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('contact_info_visibility', postgresql.ENUM('PRIVATE', 'CONNECTIONS', 'PUBLIC', name='contact_visibility_enum'), autoincrement=False, nullable=False),
    sa.Column('skills_expertise', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True),
    sa.Column('industry_focus', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True),
    sa.Column('project_interests_goals', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('collaboration_preferences', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True),
    sa.Column('tools_technologies', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True),
    sa.Column('linkedin_profile_url', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('profile_picture_url', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='user_profile_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='user_profile_pkey')
    )
    op.create_index('ix_user_profile_user_id', 'user_profile', ['user_id'], unique=True)
    op.create_index('ix_user_profile_id', 'user_profile', ['id'], unique=False)
    # ### end Alembic commands ###
