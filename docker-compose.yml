services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: shareyourspace-backend-backend-1
    ports:
      - "8000:8000"
    volumes:
      # Mount the app directory for live code changes during development
      - ./app:/app/app
      # Add other potential volume mounts if needed (e.g., scripts)
      - ./scripts:/app/scripts
      - ./main.py:/app/main.py
      - ./alembic.ini:/app/alembic.ini
      - ./alembic:/app/alembic
      # Mount the host's ADC file into the container for local development authentication
      - ~/.config/gcloud/application_default_credentials.json:/root/.config/gcloud/application_default_credentials.json:ro
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql+asyncpg://admin:changethis@db:5432/shareyourspacedb
      - SECRET_KEY=testsecret
      # - GCS_BUCKET_NAME=shareyourspace-profile-pics
      # Explicitly set the quota project for Google Cloud clients
      - GOOGLE_CLOUD_QUOTA_PROJECT=${GOOGLE_CLOUD_PROJECT}
      # Add other required env vars from your config.py here if they don't have defaults
      # For example, if TARGET_SERVICE_ACCOUNT_EMAIL is strictly required by your app logic:
      # - TARGET_SERVICE_ACCOUNT_EMAIL=your_sa_email@example.com
    dns:
      - 8.8.8.8 # Added public DNS as a test
    depends_on:
      db:
        condition: service_healthy
    command: poetry run uvicorn app.main:app --host 0.0.0.0 --port 8000 --log-level debug

  db:
    image: pgvector/pgvector:pg16
    container_name: shareyourspace-backend-db-1
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: changethis
      POSTGRES_DB: shareyourspacedb
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

volumes:
  postgres_data:
